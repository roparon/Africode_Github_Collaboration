# Initializing and Configuring Git
git init # Initializes a new Git repository in the current directory.
git config --global user.name "Your Name" # Sets the global username for Git commits.
git config --global user.email "your.email@example.com" # Sets the global email address for Git commits.
git config --global core.editor "your_editor" # Sets the default text editor for Git.
git config --global merge.tool "your_merge_tool" # Sets the default merge tool for Git.

# Getting Help
git help # Shows help information about Git.
git help <command> # Shows help information about a specific Git command.

# Working with Repositories
git clone <repository_url> # Clones a repository into a new directory.
git remote add origin <repository_url> # Adds a remote repository to your local repository.
git remote -v # Displays all the remote repositories associated with the local repository.

# Staging and Committing
git status # Displays the state of the working directory and the staging area.
git add <file> # Stages a specific file.
git add . # Stages all changes in the current directory.
git commit -m "Your commit message" # Commits the staged changes with a message.
git commit -a -m "Your commit message" # Stages and commits all changes to tracked files with a message.
git diff # Shows the differences between the working directory and the staging area.
git diff --staged # Shows the differences between the staging area and the last commit.
git log # Displays a log of all the commits in the repository.
git log --oneline # Displays a condensed log with one commit per line.

# Branching and Merging
git branch # Lists all local branches in the repository.
git branch <branch_name> # Creates a new branch.
git checkout <branch_name> # Switches to the specified branch.
git checkout -b <branch_name> # Creates a new branch and switches to it.
git merge <branch_name> # Merges the specified branch into the current branch.
git branch -d <branch_name> # Deletes the specified branch.
git branch -D <branch_name> # Force deletes the specified branch.

# Remote Repositories
git fetch # Fetches changes from the remote repository without merging.
git pull # Fetches changes from the remote repository and merges them into the current branch.
git push # Pushes the current branch to the remote repository.
git push -u origin <branch_name> # Pushes the specified branch to the remote repository and sets the upstream branch.

# Undoing Changes
git reset <file> # Unstages a specific file.
git reset --hard # Resets the working directory and staging area to the last commit.
git reset --hard <commit> # Resets the working directory and staging area to the specified commit.
git revert <commit> # Creates a new commit that undoes the changes of the specified commit.
git clean -f # Removes untracked files from the working directory.

# Viewing Changes and History
git show <commit> # Displays the changes in a specific commit.
git blame <file> # Shows who made each change to a file.
git stash # Stashes the changes in the working directory.
git stash list # Lists all stashes.
git stash apply # Applies the most recent stash.
git stash drop # Removes the most recent stash.

# Tags
git tag # Lists all tags in the repository.
git tag <tag_name> # Creates a new tag.
git push origin <tag_name> # Pushes a specific tag to the remote repository.
git push origin --tags # Pushes all tags to the remote repository.

# Submodules
git submodule add <repository_url> <path> # Adds a submodule to the repository.
git submodule update --init --recursive # Initializes, updates, and fetches all submodules.

# Aliases
git config --global alias.<alias_name> '<git_command>' # Creates a new alias for a Git command.

# Cleanup
git gc # Runs garbage collection to optimize the repository.
git fsck # Verifies the integrity of the repository.